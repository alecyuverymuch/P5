void main(){
    int a;
    bool b;
    a = 1;
    b = true;
    return;
}
int test1(){
    int x;
    x = 0;
    cout << x;
    cin >> x;
    cout << main; //Expected Error: Attempt to write a function
    cin >> main; //Expected Error: Attempt to read a function
    cout << main(); //Expected Error: Attempt to write void
    return x;
}
bool test2(){
    int x;
    x = test1();
    return; //Expected Error: Missing return value
    return x; //Expected Error: Bad return value
    return 0; //Expected Error: Bad return value
    return false;
}
void test3(){
    int x;
    x = test1();
    return x; //Expected Error: Return with a value in a void function
    return false; //Expected Error: Return with a value in a void function
}
void test4(int y){
    int x;
    x = 0;
    if (x){ //Expected Error: Non-bool expression used as an if condition
        return x; //Expected Error: Return with a value in a void function
    }
    if (0){ //Expected Error: Non-bool expression used as an if condition
    }
    else {
    }
    while(1 + 2){ //Expected Error: Non-bool expression used as a while condition
    }
}
void test5(){
    bool x;
    x = false;
    x(); //Expected Error: Attempt to call a non-function
    test3(x); //Expected Error: Function call with wrong number of args
    test4(x); //Expected Error: Type of actual does not match type of formal
    test4(1 > 2); //Expected Error: Type of actual does not match type of formal
}
void test6(){
    bool x;
    if (test5() == test3()){ //Expected Error: Equality operator applied to void functions
    }
    x = test5 != test4; //Expected Error: Equality operator applied to functions
}
void test7(){
    test6 = test5; //Expected Error: Function Assignment
}